#!/bin/bash

set -eu

if [[ -n "${1-}" ]]; then
  RUST_VERSION="$1"
else
  echo "Error: No Rust version set."
  echo
  echo "Usage:"
  echo "  ./build_and_test <Rust version>"
  echo "  ./build_and_test 1.29.1"
  exit 1
fi

BUILD_VERSION=$(date -u +"0.0.%s")
TARGET_TRIPLE=x86_64-unknown-linux-musl

echo
echo "Creating build machine."
(
  cd rust_lib
  vagrant up cross
)

rm -rf build
mkdir build

echo
echo "Building Rust extension."
(
  cd rust_lib
  vagrant ssh cross -c "/rust_lib/build_in_vm $RUST_VERSION $TARGET_TRIPLE"
)

rm -f elixir_app/elixir_package/c_src/libelixir_package_extension.a
cp rust_lib/target/$TARGET_TRIPLE/release/libelixir_package_extension.a elixir_app/elixir_package/c_src

echo
echo "Building and running Elixir app release."
(
  cd elixir_app
  # Build docker image with Elixir app in a two stage setup
  # First stage compiles the app
  # Second stage only runs the app
  docker build --build-arg BUILD_VERSION=$BUILD_VERSION -t alpine-elixir-build-test:build .
  # Run the Elixir app
  docker run -e BUILD_VERSION=$BUILD_VERSION -it --rm alpine-elixir-build-test:build ash
)
